AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  LottoChecker Frontend

Parameters:
  AlternateDomain:
    Type: String
    Description: "Optional alternate domain for accessing the site. ex: lottochecker.mydomain.com"
    Default: ""
  AcmCertificateArn:
    Type: String
    Description: ARN of the SSL certificate to use for the Website URL. Required if AlternateDomain was provided.
    Default: ""

Conditions:
  # If AlternateDomain is provided, i.e. a custom domain name, then:
  # 1. it will be defined as an alias domain to the CloudFront distribution.
  # 2. a corresponding AcmCertificateArn must also be provided.
  HasAlternateDomain:
    !Not [
      !Or [!Equals [!Ref AlternateDomain, ""], !Equals [!Ref AcmCertificateArn, ""]],
    ]

Resources:
  FrontendHostingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${AWS::StackName}-website

  FrontendHostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendHostingBucket
      PolicyDocument:
        Statement:
          Effect: Allow
          Action: s3:GetObject
          Principal:
            AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOAI}
          Resource: !Sub arn:aws:s3:::${FrontendHostingBucket}/*

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !If [HasAlternateDomain, !Ref AlternateDomain, !Ref "AWS::NoValue"]
        ViewerCertificate: !If
          - HasAlternateDomain
          - AcmCertificateArn: AcmCertificateArn
            MinimumProtocolVersion: TLSv1
            SslSupportMethod: sni-only
          - CloudFrontDefaultCertificate: true
        DefaultCacheBehavior:
          TargetOriginId: !Sub S3-${FrontendHostingBucket}
          ViewerProtocolPolicy: https-only
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
        Origins:
          - S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOAI}
            DomainName: !GetAtt FrontendHostingBucket.RegionalDomainName
            Id: !Sub S3-${FrontendHostingBucket}

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref FrontendHostingBucket

Outputs:
  WebsiteBucketName:
    Value: !Ref FrontendHostingBucket
  DistributionId:
    Value: !Ref CloudFrontDistribution
  WebsiteCdnUrl:
    Description: Web address to Cloudfront distribution.
    Value: !Sub https://${CloudFrontDistribution.DomainName}
